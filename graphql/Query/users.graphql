"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
 type Query {
    "Find a single user by an identifying attribute."
    user(
        "Search by primary key."
        id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

        "Search by email address."
        email: String
            @eq
            @rules(apply: ["prohibits:id", "required_without:id", "email"])

        username: String
            @eq
            @rules(apply: ["prohibits:id", "required_without:id", "username"])
    ): User @find

    "List multiple users."
    users(
        "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
        # name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)

 "Find a single customer by the username of the associated user."
    customerByUsername(username: String!): Customer @find

 "Find a single customer"
    customer:[Customer!]! @paginate(defaultCount: 10)

}

"Account of a person who utilizes this application."
type User {
    "Unique primary key."
    id: ID!

    "unique username."
    username: String!

    "Unique email address."
    email: String!

    "When the email was verified."
    email_verified_at: DateTime

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!
}

type Cutsomer{
 
     id:ID!

     user: User @belongsTo

     name:String!

     address:String!

     city:String!

     phone:String!

     bio:String
}

